from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Updater,
    CommandHandler,
    CallbackQueryHandler,
    ConversationHandler,
    MessageHandler,
    filters,
    CallbackContext,
)

TOKEN = '7864230893:AAGffXDMbx6RAiGPoAbdn9RBnUnWgn8SEv8'
ADMIN_CHAT_ID = 7802237334
EXCHANGE_RATE = 41.2  # float —Å —Ç–æ—á–∫–æ–π

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    CHOOSING_CURRENCY,
    ENTERING_AMOUNT,
    CONFIRMING_EXCHANGE,
    ENTERING_TRX_AMOUNT,
    ENTERING_TRX_ADDRESS,
) = range(5)


def start(update: Update, context: CallbackContext):
    keyboard = [
        [
            InlineKeyboardButton("‚û∏ –û–±–º–µ–Ω—è—Ç—å", callback_data='exchange'),
            InlineKeyboardButton("üí∞ –ü–æ–ª—É—á–∏—Ç—å TRX", callback_data='get_trx'),
            InlineKeyboardButton("üìâ –ö—É—Ä—Å", callback_data='rate'),
        ],
        [
            InlineKeyboardButton("üì¶ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏", callback_data='status'),
            InlineKeyboardButton("üè∞ –†–µ—Ñ–µ—Ä–∞–ª–∫–∞", callback_data='referral'),
            InlineKeyboardButton("üõ† –ü–æ–º–æ—â—å", callback_data='help'),
        ]
    ]
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crypto-Exchange Bot üí±\n\n"
        "üß≤ –û–±–º–µ–Ω –±—ã—Å—Ç—Ä—ã–π –∏ —É–¥–æ–±–Ω—ã–π.\n\n"
        "üåü –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:"
    )

    if update.message:
        update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        update.callback_query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))


def handle_menu(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data

    if data == 'rate':
        query.edit_message_text(f"üìâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å: 1 USDT = {EXCHANGE_RATE} UAH")

    elif data == 'get_trx':
        query.edit_message_text("üí∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É TRX –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è:")
        return ENTERING_TRX_AMOUNT

    elif data == 'exchange':
        keyboard = [
            [InlineKeyboardButton("USDT", callback_data='currency_usdt')],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')]
        ]
        query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞:",
                                reply_markup=InlineKeyboardMarkup(keyboard))
        return CHOOSING_CURRENCY

    elif data == 'status':
        query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

    elif data == 'referral':
        query.edit_message_text(
            "üåü –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã! –¢–≤–æ—è —Å—Å—ã–ª–∫–∞: https://t.me/–¢–≤–æ–π–ë–æ—Ç?start=ref")

    elif data == 'help':
        query.edit_message_text("üîß –ü–æ–º–æ—â—å: –ù–∞–ø–∏—à–∏ @admin –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º")

    elif data == 'back_to_menu':
        start(update, context)
        return ConversationHandler.END

    return ConversationHandler.END


def choosing_currency(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data

    if data == 'currency_usdt':
        context.user_data['currency'] = 'USDT'
        query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ (–≤ USDT):")
        return ENTERING_AMOUNT

    elif data == 'back_to_menu':
        start(update, context)
        return ConversationHandler.END

    return ConversationHandler.END


def entering_amount(update: Update, context: CallbackContext):
    text = update.message.text
    try:
        amount = float(text.replace(',', '.'))
        if amount <= 0:
            update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è.")
            return ENTERING_AMOUNT
    except ValueError:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
        return ENTERING_AMOUNT

    context.user_data['amount'] = amount
    currency = context.user_data.get('currency', 'USDT')
    sum_uah = amount * EXCHANGE_RATE

    keyboard = [
        [InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data='send_exchange')],
        [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data='back_to_menu')]
    ]

    update.message.reply_text(
        f"–í—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å {amount} {currency} –ø–æ –∫—É—Ä—Å—É {EXCHANGE_RATE}.\n"
        f"–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: {sum_uah:.2f} UAH.\n\n–ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return CONFIRMING_EXCHANGE


def confirming_exchange(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data

    if data == 'send_exchange':
        query.edit_message_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!\n\n"
            "–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∞–¥—Ä–µ—Å:\n`TMHDhHp3qdT4EuEuFQGWxuZ14EvzDZseac`",
            parse_mode='Markdown'
        )
        return ConversationHandler.END

    elif data == 'back_to_menu':
        start(update, context)
        return ConversationHandler.END

    return ConversationHandler.END


def entering_trx_amount(update: Update, context: CallbackContext):
    text = update.message.text
    try:
        amount = float(text.replace(',', '.'))
        if amount <= 0:
            update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è.")
            return ENTERING_TRX_AMOUNT
    except ValueError:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
        return ENTERING_TRX_AMOUNT

    context.user_data['trx_amount'] = amount
    update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å TRX –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:")
    return ENTERING_TRX_ADDRESS


def entering_trx_address(update: Update, context: CallbackContext):
    trx_address = update.message.text.strip()
    if not trx_address:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å.")
        return ENTERING_TRX_ADDRESS

    amount = context.user_data.get('trx_amount')
    update.message.reply_text(
        f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ {amount} TRX –ø—Ä–∏–Ω—è—Ç–∞.\n"
        f"–ê–¥—Ä–µ—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {trx_address}\n\n"
        "–û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏."
    )
    return ConversationHandler.END


def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(handle_menu)],
        states={
            CHOOSING_CURRENCY: [CallbackQueryHandler(choosing_currency)],
            ENTERING_AMOUNT: [MessageHandler(filters.text & ~filters.command, entering_amount)],
            CONFIRMING_EXCHANGE: [CallbackQueryHandler(confirming_exchange)],

            ENTERING_TRX_AMOUNT: [MessageHandler(filters.text & ~filters.command, entering_trx_amount)],
            ENTERING_TRX_ADDRESS: [MessageHandler(filters.text & ~filters.command, entering_trx_address)],
        },
        fallbacks=[CommandHandler('start', start)],
        # per_message –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False
    )

    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
