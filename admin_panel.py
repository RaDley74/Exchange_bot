from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler, CallbackQueryHandler,
    ConversationHandler, ContextTypes, filters
)
import configparser

# –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
config = configparser.ConfigParser()
config.read('settings.ini')

# –≠—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
[ASK_PASSWORD, ADMIN_MENU] = range(2)

# /start ‚Äî –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å


async def admin_panel_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    admin_id = context.bot_data.get('ADMIN_CHAT_ID')
    if admin_id is None:
        await update.message.reply_text("‚ùå –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.\n\n‚ö†Ô∏è –ü—Ä–æ–ø–∏—à–∏—Ç–µ /start ‚ñ∂Ô∏è")
        return ConversationHandler.END
    elif update.effective_user.id != admin_id:
        await update.message.reply_text("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return ConversationHandler.END

    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:")
    return ASK_PASSWORD


# –≠—Ç–∞–ø ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
async def admin_panel_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    entered_password = update.message.text.strip()
    correct_password = config['Settings']['admin_password']

    if entered_password == correct_password:
        return await admin_panel_menu(update, context)
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return ASK_PASSWORD


# –≠—Ç–∞–ø ‚Äî –º–µ–Ω—é
async def admin_panel_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='admin_info'),
            InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data='admin_settings'),
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='admin_back_menu')
        ],
    ]
    await update.message.reply_text(
        "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return ADMIN_MENU


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def admin_panel_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    admin_id = context.bot_data.get('ADMIN_CHAT_ID')

    if update.effective_user.id != admin_id:
        await query.message.reply_text("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return ConversationHandler.END

    if data == 'admin_info':
        exchange_rate = float(config['Settings']['exchange_rate'])
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üìä –ù–∞–∑–∞–¥", callback_data='admin_back_menu')]
        ])
        await query.edit_message_text(
            f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n üÜî ADMIN_ID: {admin_id}\n\n –ö—É—Ä—Å: {exchange_rate}",
            reply_markup=keyboard
        )

    elif data == 'admin_settings':
        await query.edit_message_text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.")

    elif data == 'admin_back_menu':
        await query.edit_message_text("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é.")
        # –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
        return await admin_panel_menu(query, context)

    else:
        await query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")

    return ADMIN_MENU


# –û—Ç–º–µ–Ω–∞ / –≤—ã—Ö–æ–¥
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üö™ –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
    return ConversationHandler.END
